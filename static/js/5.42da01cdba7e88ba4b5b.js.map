{"version":3,"sources":["webpack:///./node_modules/_parse-headers@2.0.3@parse-headers/parse-headers.js","webpack:///./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/_video.js@6.12.1@video.js/dist/video.cjs.js","webpack:///./node_modules/_vue-video-player@5.0.2@vue-video-player/dist/vue-video-player.js","webpack:///./node_modules/_xhr@2.4.0@xhr/index.js","webpack:///./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/_is-function@1.0.2@is-function/index.js","webpack:///./node_modules/_safe-json-parse@4.0.0@safe-json-parse/tuple.js","webpack:///./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/_global@4.3.2@global/window.js","webpack:///src/components/VueVideoPlayer/index.vue","webpack:///./src/components/VueVideoPlayer/index.vue?849f","webpack:///./src/components/VueVideoPlayer/index.vue","webpack:///src/views/video/VideoPlayer.vue","webpack:///./src/views/video/VideoPlayer.vue?625a","webpack:///./src/views/video/VideoPlayer.vue","webpack:///./node_modules/_global@4.3.2@global/document.js","webpack:///./node_modules/_global@4.4.0@global/window.js","webpack:///./node_modules/_tsml@1.0.1@tsml/tsml.js","webpack:///./node_modules/_xtend@4.0.2@xtend/immutable.js","webpack:///./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vtt.js"],"names":["trim","string","replace","module","exports","headers","arg","result","headersArr","split","i","length","row","index","indexOf","key","slice","toLowerCase","value","Object","prototype","toString","call","push","scrollSetting","","up","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","defineProperties","this","width","enumerable","get","set","Error","lines","TypeError","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","_interopDefault","ex","match","window","__webpack_require__","document","tsml","safeParseTuple","xhr","vtt","version","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPAD","test","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","createElement","style","browser","freeze","_typeof","Symbol","iterator","obj","constructor","classCallCheck","instance","Constructor","inherits","subClass","superClass","create","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","taggedTemplateLiteralLoose","strings","raw","keys","object","isObject","each","fn","forEach","assign","target","_len","arguments","sources","Array","_key","apply","concat","source","isPlain","log","level","history","logByType","type","args","stringify","undefined","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","console","info","map","a","isArray","JSON","x","String","join","all","off","debug","warn","error","DEFAULT","hasOwnProperty","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","computedStyle","el","prop","getComputedStyle","cs","currentStyle","_templateObject","isNonBlankString","str","throwIfWhitespace","isEl","nodeType","isInFrame","parent","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","filter","c","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","name","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","height","findPosition","box","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","Math","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","id","hasData","removeData","e","_cleanUpEvents","elem","data","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","opts","defineProperty","addEventListener","passiveEvents","on","guid","hash","handlersCopy","m","n","options","passive","attachEvent","removeType","t","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs$2","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","_i","_e","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","readyState","createStyleElement","setTextContent","styleSheet","cssText","bind","uid","bound","throttle","last","now","debounce","immediate","timeout","_later","clearTimeout","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","charAt","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","Boolean","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","message","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","reduce","acc","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","list","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","url","props","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","flush","loadTrack","uri","crossOrigin","cors","err","response","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","fallbackImg_","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","trackList","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","s","floor","h","gm","gh","isNaN","Infinity","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","default","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","Number","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$2","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","eventName","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","r","_templateObject$1","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","b","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this11","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","d","__esModule","customEventName","required","events","globalOptions","progressControl","fullscreenToggle","volumeMenuButton","globalEvents","reseted","mounted","initialize","beforeDestroy","$refs","$emit","__ob__","$nextTick","watch","deep","install","videoPlayer","u","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","f","beforeCreate","_injectStyles","esModule","$createElement","_self","_c","staticClass","ref","isFunction","parseHeaders","xtend","initParams","params","createXHR","_createXHR","called","errorFunc","evt","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","useXDR","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","getBody","rawRequest","getAllResponseHeaders","XDomainRequest","XMLHttpRequest","onreadystatechange","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","autoKeyword","directionSetting","lr","rl","alignSetting","middle","findAlignSetting","cobj","isIE8","baseObj","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","findDirectionSetting","getCueAsHTML","convertCueToDOMTree","alert","confirm","prompt","reviver","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","global","win","VueVideoPlayer","timeDivider","durationDisplay","components","vue_video_player","components_VueVideoPlayer","_h","src_components_VueVideoPlayer","normalizeComponent","VideoPlayer","Hints","video_VideoPlayer","_vm","slot","_v","gutter","span","shadow","staticStyle","outline","VideoPlayer_Component","VideoPlayer_normalizeComponent","__webpack_exports__","doccy","topLevel","minDoc","clean","sa","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","region","alt","vals","vals0","integer","line","lineAlign","snapToLines","size","align","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","unescape","shouldAdd","current","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","currentRange","StyleBox","CueStyleBox","styleOptions","styles","display","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","direction","nodeStack","pushNodes","nextTextNode","charCodeAt","determineBidi","stylesunicodeBidi","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","count","computeLinePos","axis","step","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decode","decodeURIComponent","encodeURIComponent","cuetext","overlay","paddedOverlay","margin","shouldCompute","decoder","buffer","TextDecoder","reportOrThrowError","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","xy","anchor","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring"],"mappings":"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","file":"static/js/5.42da01cdba7e88ba4b5b.js","sourcesContent":["var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_parse-headers@2.0.3@parse-headers/parse-headers.js\n// module id = +/z+\n// module chunks = 5","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vttregion.js\n// module id = +pTH\n// module chunks = 5","/**\n * @license\n * Video.js 6.12.1 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar version = \"6.12.1\";\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\n\nvar browser = (Object.freeze || Object)({\n\tIS_IPAD: IS_IPAD,\n\tIS_IPHONE: IS_IPHONE,\n\tIS_IPOD: IS_IPOD,\n\tIS_IOS: IS_IOS,\n\tIOS_VERSION: IOS_VERSION,\n\tIS_ANDROID: IS_ANDROID,\n\tANDROID_VERSION: ANDROID_VERSION,\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n\tIS_FIREFOX: IS_FIREFOX,\n\tIS_EDGE: IS_EDGE,\n\tIS_CHROME: IS_CHROME,\n\tCHROME_VERSION: CHROME_VERSION,\n\tIS_IE8: IS_IE8,\n\tIE_VERSION: IE_VERSION,\n\tIS_SAFARI: IS_SAFARI,\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\n\tTOUCH_ENABLED: TOUCH_ENABLED,\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n *\n * @param  {boolean} [stringify]\n *         By default, only old IEs should get console argument stringification,\n *         but this is exposed as a parameter to facilitate testing.\n */\nvar logByType = function logByType(type, args) {\n  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!IE_VERSION && IE_VERSION < 11;\n\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window.console.info || window.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n  // objects and arrays for those less-capable browsers.\n  if (stringify) {\n    args = args.map(function (a) {\n      if (isObject(a) || Array.isArray(a)) {\n        try {\n          return JSON.stringify(a);\n        } catch (x) {\n          return String(a);\n        }\n      }\n\n      // Cast to string before joining, so we get null and undefined explicitly\n      // included in output (as we would in a modern console).\n      return String(a);\n    }).join(' ');\n  }\n\n  // Old IE versions do not allow .apply() for console methods (they are\n  // reported as objects rather than functions).\n  if (!fn.apply) {\n    fn(args);\n  } else {\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  }\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var cs = window.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    document === window.document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof document.createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (IE_VERSION === 9) {\n    // Ignore IE9\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\n\n\nvar Dom = (Object.freeze || Object)({\n\tisReal: isReal,\n\tisEl: isEl,\n\tisInFrame: isInFrame,\n\tcreateEl: createEl,\n\ttextContent: textContent,\n\tprependTo: prependTo,\n\thasClass: hasClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\ttoggleClass: toggleClass,\n\tsetAttributes: setAttributes,\n\tgetAttributes: getAttributes,\n\tgetAttribute: getAttribute,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tblockTextSelection: blockTextSelection,\n\tunblockTextSelection: unblockTextSelection,\n\tgetBoundingClientRect: getBoundingClientRect,\n\tfindPosition: findPosition,\n\tgetPointerPosition: getPointerPosition,\n\tisTextNode: isTextNode,\n\temptyEl: emptyEl,\n\tnormalizeContent: normalizeContent,\n\tappendContent: appendContent,\n\tinsertContent: insertContent,\n\tisSingleLeftClick: isSingleLeftClick,\n\t$: $,\n\t$$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = (Object.freeze || Object)({\n\tfixEvent: fixEvent,\n\ton: on,\n\toff: off,\n\ttrigger: trigger,\n\tone: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$2 = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs$2.options.autoSetup === false) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = document.getElementsByTagName('video');\n  var audios = document.getElementsByTagName('audio');\n  var divs = document.getElementsByTagName('video-js');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  if (divs && divs.length > 0) {\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\n      mediaEls.push(divs[_i2]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\n      var mediaEl = mediaEls[_i3];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$2(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs$2 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilites to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyle = window.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (IS_IE8) {\n        list = document.createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      track = document.createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = (Object.freeze || Object)({\n\tparseUrl: parseUrl,\n\tgetAbsoluteURL: getAbsoluteURL,\n\tgetFileExtension: getFileExtension,\n\tisCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new TextTrackCueList(tt.cues_);\n    var activeCues = new TextTrackCueList(tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.ready(function () {\n        tt.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    /**\n     * @memberof TextTrack\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get$$1() {\n        return default_;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     * @instance\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get$$1() {\n        return mode;\n      },\n      set: function set$$1(newMode) {\n        var _this2 = this;\n\n        if (!TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode === 'showing') {\n\n          this.tech_.ready(function () {\n            _this2.tech_.on('timeupdate', timeupdateHandler);\n          }, true);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n\n\n      // /!\\ Keep this setter empty (see the timeupdate handler above)\n      set: function set$$1() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      trackElement = document.createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new TextTrack(options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     * @instance\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get$$1() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     * @instance\n     *\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get$$1() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window && window.videojs && window.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middlware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file button.js\n */\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dipose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track['default']) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precendence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window.WebVTT.processCues(window, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nvar formatTime = function (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n};\n\n/**\n * @file time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessiblity\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessiblity\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n// Required children\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere and it logs an error on IE8\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an overide for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n// Required children\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      var docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n}\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell syncronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\nvar srcDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n\n      return v;\n    }\n  });\n}\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * @file html5.js\n */\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this2 = this;\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var elTracks = _this2.el()[props.getterName];\n      var techTracks = _this2[props.getterName]();\n\n      if (!_this2['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n\n        elTracks.addEventListener(eventName, listener);\n        _this2.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      });\n\n      // Remove (native) tracks that are not used anymore\n      _this2.on('loadstart', removeOldTracks);\n      _this2.on('dispose', function (e) {\n        return _this2.off('loadstart', removeOldTracks);\n      });\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this3 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this3.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this3.el_.duration === Infinity) {\n            _this3.trigger('durationchange');\n          }\n          _this3.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this4 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this4.off('webkitbeginfullscreen', beginFn);\n      _this4.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overriden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  if (IS_IE8) {\n    return false;\n  }\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n/**\n * @file player.js\n */\n// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n\n      // copy over properties from the video-js element\n      // ie8 doesn't support Object.keys nor hasOwnProperty\n      // on dom elements so we have to specify properties individually\n      ['autoplay', 'controls', 'crossOrigin', 'defaultMuted', 'defaultPlaybackRate', 'loop', 'muted', 'playbackRate', 'src', 'volume'].forEach(function (prop) {\n        if (typeof el[prop] !== 'undefined') {\n          tag[prop] = el[prop];\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n\n        if (divEmbed) {\n          tag.className += ' ' + attrs[attr];\n        }\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise['catch']) {\n        return;\n      }\n\n      return playPromise['catch'](function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise['catch']) {\n        promise['catch'](function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise['catch']) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    })['catch'](function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // if we are a blob url, don't update the source cache\n    // blob urls can arise when playback is done via Media Source Extension (MSE)\n    // such as m3u8 sources with @videojs/http-streaming (VHS)\n    if (/^blob:/.test(src)) {\n      return;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on intial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates wether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\nif (!IS_IE8) {\n  Player.prototype.options_.children.push('resizeManager');\n}\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n// Include the built-in techs\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\n  document.createElement('video');\n  document.createElement('audio');\n  document.createElement('track');\n  document.createElement('video-js');\n}\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n// Object.defineProperty is not available in IE8\nif (!IS_IE8 && Object.defineProperty) {\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n} else {\n  videojs.middleware = { TERMINATOR: TERMINATOR };\n}\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs.url = Url;\n\nmodule.exports = videojs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_video.js@6.12.1@video.js/dist/video.cjs.js\n// module id = 1n34\n// module chunks = 5","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-video-player@5.0.2@vue-video-player/dist/vue-video-player.js\n// module id = CRWL\n// module chunks = 5","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_xhr@2.4.0@xhr/index.js\n// module id = H0Gi\n// module chunks = 5","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": true,\n  \"lr\": true,\n  \"rl\": true\n};\nvar alignSetting = {\n  \"start\": true,\n  \"middle\": true,\n  \"end\": true,\n  \"left\": true,\n  \"right\": true\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction extend(obj) {\n  var i = 1;\n  for (; i < arguments.length; i++) {\n    var cobj = arguments[i];\n    for (var p in cobj) {\n      obj[p] = cobj[p];\n    }\n  }\n\n  return obj;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  var cue = this;\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var baseObj = {};\n\n  if (isIE8) {\n    cue = document.createElement('custom');\n  } else {\n    baseObj.enumerable = true;\n  }\n\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  cue.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperty(cue,\n    \"id\", extend({}, baseObj, {\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"pauseOnExit\", extend({}, baseObj, {\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"startTime\", extend({}, baseObj, {\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"endTime\", extend({}, baseObj, {\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"text\", extend({}, baseObj, {\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"region\", extend({}, baseObj, {\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"vertical\", extend({}, baseObj, {\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"snapToLines\", extend({}, baseObj, {\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"line\", extend({}, baseObj, {\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"lineAlign\", extend({}, baseObj, {\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"position\", extend({}, baseObj, {\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"positionAlign\", extend({}, baseObj, {\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"size\", extend({}, baseObj, {\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"align\", extend({}, baseObj, {\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  cue.displayState = undefined;\n\n  if (isIE8) {\n    return cue;\n  }\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vttcue.js\n// module id = LH1D\n// module chunks = 5","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_is-function@1.0.2@is-function/index.js\n// module id = LsNs\n// module chunks = 5","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_safe-json-parse@4.0.0@safe-json-parse/tuple.js\n// module id = Lvi9\n// module chunks = 5","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/browser-index.js\n// module id = TBd/\n// module chunks = 5","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_global@4.3.2@global/window.js\n// module id = VBq3\n// module chunks = 5","<template>\n  <videoPlayer class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions\"/>\n</template>\n\n<script>\nimport { videoPlayer } from 'vue-video-player'\nimport 'video.js/dist/video-js.css'\n\nexport default {\n  name: 'VueVideoPlayer',\n  data () {\n    return {\n      playerOptions: {\n        playbackRates: [0.7, 1.0, 1.5, 2.0], // 可选的播放速度\n        autoplay: false, // 如果为true,浏览器准备好时开始回放\n        muted: false, // 默认情况下将会消除任何音频\n        loop: false, // 是否视频一结束就重新开始\n        preload: 'auto', // 建议浏览器在<video>加载元素后是否应该开始下载视频数据;auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        language: 'zh-CN', // 语言设置\n        aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值;值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true, // 当true时，Video.js player将拥有流体大小;换句话说，它将按比例缩放以适应其容器\n        sources: [{\n          type: 'video/mp4', // 类型\n          src: 'https://cdn.jsdelivr.net/gh/baimingxuan/media-store/videos/houlang.mp4' // 视频地址\n        }],\n        poster: '', // 视频封面地址\n        notSupportedMessage: '此视频暂无法播放，请稍后再试', // 允许覆盖Video.js无法播放媒体源时显示的默认信息\n        controlBar: {\n          timeDivider: true, // 当前时间和持续时间的分隔符\n          durationDisplay: true, // 显示持续时间\n          remainingTimeDisplay: false, // 是否显示剩余时间功能\n          fullscreenToggle: true // 是否显示全屏按钮\n        }\n      }\n    }\n  },\n  components: { videoPlayer }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/VueVideoPlayer/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('videoPlayer',{ref:\"videoPlayer\",staticClass:\"video-player vjs-custom-skin\",attrs:{\"playsinline\":true,\"options\":_vm.playerOptions}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-bcdb3022\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/VueVideoPlayer/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bcdb3022\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/VueVideoPlayer/index.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"video-player-wrapper\">\n    <Hints>\n      <template slot=\"hintName\">视频播放器</template>\n      <template slot=\"hintInfo\">\n        <p>Vue-Video-Player：一个使用Vue对video.js进行二次封装的视频播放插件，适用于目前主流网络视频的播放</p>\n        <p><p>github地址：访问 <el-link type=\"success\" href=\"https://github.com/surmon-china/vue-video-player\" target=\"_blank\">Vue-Video-Player</el-link></p>\n      </template>\n    </Hints>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">传统视频播放器</div>\n          <div class=\"content-box\">\n            <video src=\"https://cdn.jsdelivr.net/gh/baimingxuan/media-store/videos/houlang.mp4\" controls width=\"100%\" style=\"outline: none\"></video>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card shadow=\"always\">\n          <div slot=\"header\" class=\"title\">视频播放插件</div>\n          <div class=\"content-item\">\n            <VueVideoPlayer/>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport Hints from '../../components/Hints'\nimport VueVideoPlayer from '../../components/VueVideoPlayer'\n\nexport default {\n  name: 'VideoPlayer',\n  components: { Hints, VueVideoPlayer }\n}\n</script>\n\n<style lang=\"less\">\n.video-player-wrapper {\n  .content-box {\n    height: 440px;\n  }\n  .content-item {\n    padding: 8px 0;\n    .video-js {\n      .vjs-big-play-button {\n        top: 45%;\n        left: 45%;\n        font-size: 2em;\n      }\n    }\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/video/VideoPlayer.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"video-player-wrapper\"},[_c('Hints',[_c('template',{slot:\"hintName\"},[_vm._v(\"视频播放器\")]),_vm._v(\" \"),_c('template',{slot:\"hintInfo\"},[_c('p',[_vm._v(\"Vue-Video-Player：一个使用Vue对video.js进行二次封装的视频播放插件，适用于目前主流网络视频的播放\")]),_vm._v(\" \"),_c('p'),_c('p',[_vm._v(\"github地址：访问 \"),_c('el-link',{attrs:{\"type\":\"success\",\"href\":\"https://github.com/surmon-china/vue-video-player\",\"target\":\"_blank\"}},[_vm._v(\"Vue-Video-Player\")])],1)])],2),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{attrs:{\"shadow\":\"always\"}},[_c('div',{staticClass:\"title\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"传统视频播放器\")]),_vm._v(\" \"),_c('div',{staticClass:\"content-box\"},[_c('video',{staticStyle:{\"outline\":\"none\"},attrs:{\"src\":\"https://cdn.jsdelivr.net/gh/baimingxuan/media-store/videos/houlang.mp4\",\"controls\":\"\",\"width\":\"100%\"}})])])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{attrs:{\"shadow\":\"always\"}},[_c('div',{staticClass:\"title\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"视频播放插件\")]),_vm._v(\" \"),_c('div',{staticClass:\"content-item\"},[_c('VueVideoPlayer')],1)])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-30ef1dca\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/video/VideoPlayer.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-30ef1dca\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./VideoPlayer.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./VideoPlayer.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./VideoPlayer.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-30ef1dca\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./VideoPlayer.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/video/VideoPlayer.vue\n// module id = null\n// module chunks = ","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_global@4.3.2@global/document.js\n// module id = e3Mc\n// module chunks = 5","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_global@4.4.0@global/window.js\n// module id = e73Z\n// module chunks = 5","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_tsml@1.0.1@tsml/tsml.js\n// module id = qGBE\n// module chunks = 5","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_xtend@4.0.2@xtend/immutable.js\n// module id = uKUS\n// module chunks = 5","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var color = \"rgba(255, 255, 255, 1)\";\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n  if (isIE8) {\n    color = \"rgb(255, 255, 255)\";\n    backgroundColor = \"rgb(0, 0, 0)\";\n  }\n\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: color,\n    backgroundColor: backgroundColor,\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\"\n  };\n\n  if (!isIE8) {\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\";\n    styles.unicodeBidi = \"plaintext\";\n  }\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  if (!isIE8) {\n    styles.direction = determineBidi(this.cueDiv);\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\".\n    stylesunicodeBidi =  \"plaintext\";\n  }\n\n  this.applyStyles(styles);\n\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n  if (isIE8 && !this.lineHeight) {\n    this.lineHeight = 13;\n  }\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_videojs-vtt.js@0.12.6@videojs-vtt.js/lib/vtt.js\n// module id = wJKP\n// module chunks = 5"],"sourceRoot":""}